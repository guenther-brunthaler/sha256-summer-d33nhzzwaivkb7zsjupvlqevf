#! /bin/sh
set -e

cleanup() {
	rc=$?
	test "$TD" && rm -r -- "$TD"
	test $rc = 0 || echo "$0 failed!" >& 2
}
TD=
trap cleanup 0
trap 'exit $?' INT QUIT TERM HUP

DEBUG=false
while getopts D opt
do
	case $opt in
		D) DEBUG=true;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

cfg="${1:?"name of client configuration .cfg file"}"
test $# = 1
test -f "$cfg"
case $cfg in
	/* | ./* | ../*) ;;
	*) cfg=./$cfg
esac

client_cd=
client_remote=
remote_branch=
files_of_interest=
. "$cfg"
test "$client_cd"
test "$client_remote"
test "$remote_branch"
test "$files_of_interest"

subject=${0##*_}
test "$subject"
header=${subject}_header.txt
footer=${subject}_footer.txt
test -f "$header"
test -f "$footer"

TD=`mktemp -d -- "${TMPDIR:-/tmp}/${0##*/}.XXXXXXXXXX"`

client_commit=`git rev-parse refs/remotes/"$client_remote/$remote_branch"`
test "$client_commit"

oldIFS=$IFS; nl=`printf '\n:'`; nl=${nl%:}
IFS=$nl; set -- $files_of_interest; IFS=$oldIFS

case $subject in
	patch)
		git diff $client_commit.. -- "$@" > "$TD/diffs"
		sed 's:^--- [^/]*/::; t; d' < "$TD/diffs" \
		| LC_COLLATE=C sort > "$TD/files"
		;;
	installer)
		mkdir -- "$TD"/stage
		git archive $client_commit "$@" | {
			cd "$TD"/stage
			tar -x
			find . | sed 's:^\./::; t; d' \
			| LC_COLLATE=C sort > "$TD/files"
			cpio -oH newc < "$TD/files" > "$TD/diffs" 2> /dev/null
		}
		rm -r -- "$TD"/stage
		;;
	*) false
esac

smallest=
for packer in 'gzip -9c|-dc' 'bzip2 -9c|-dc' 'xz -9c|-dc' 'xz -c|-dc' 'cat|'
do
	unpack=${packer##*"|"}; pack=${packer%"|$unpack"}
	unpack=${pack%%" "*}${unpack:+" "}$unpack
	if
		$pack < "$TD/diffs" > "$TD/diffs".pak 2> /dev/null \
		&& test -s "$TD/diffs".pak \
		&& bytes=`
			if $DEBUG && test "$pack" = cat
			then
				echo -1
			else
				wc -c < "$TD/diffs".pak
			fi
		` \
		&& { test -z "$smallest" || test $bytes -lt $smallest; }
	then
		best_u=$unpack
		mv -- "$TD/diffs".pak "$TD/diffs".best
		smallest=$bytes
	fi
done
test "$smallest"
unpack=$best_u
rm -f -- "$TD/diffs".pak
if $DEBUG
then
	cat < "$TD/diffs".best
else
	openssl base64 < "$TD/diffs".best
fi > "$TD/diffs"
rm -- "$TD/diffs".best

largest=-1
tag_file=
while IFS= read -r f
do
	bytes=`git show "$client_commit:$f" | wc -c`
	test "$bytes"
	test $bytes -le $largest && continue
	tag_file=$f
	largest=bytes
done < "$TD/files"
test $largest != -1

cksum=`git show "$client_commit:$tag_file" | cksum`

expand() {
	local r i p
	p=
	for i in "d$client_cd" "f$tag_file" "c$cksum" "u$unpack"
	do
		r=${i#?}; i=${i%"$r"}
		p="$p${p:+"; "}s|%$i|$r|g"
	done
	sed "$p" "$1"
}

expand "$header"
cat "$TD/diffs"
expand "$footer"
